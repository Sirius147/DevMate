name: CI/CD Deploy

on:
  push:
    branches: [ "main" ]   # main 브랜치 푸시 시 배포 # CHECK#chaeck ##

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build JAR
        run: ./gradlew clean build -x test

      # === GHCR 로그인: PAT 사용 ===
      - name: Login to GHCR (PAT)
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.repository_owner }}" --password-stdin

      # === 이미지 태그는 반드시 소문자 ===
      - name: Build & Push Docker image
        env:
          OWNER: ${{ github.repository_owner }}
          IMAGE_NAME: devmate
        run: |
          OWNER_LC=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/${OWNER_LC}/${IMAGE_NAME}:latest"
          echo "Using image: $IMAGE"

          docker build -t "$IMAGE" .
          docker push "$IMAGE"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /srv/app
            docker compose pull
            docker compose up -d
            docker image prune -f