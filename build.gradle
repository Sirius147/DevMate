plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sirius'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 기본 Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// OAuth2 Client (구글/네이버/카카오 등 소셜로그인 클라이언트)
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// 자체 서명 JWT 발급/파싱을 직접 할 때 JJWT 사용
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 직렬화

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf"


	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation "org.testcontainers:junit-jupiter:1.20.1"
	testImplementation 'org.testcontainers:mysql:1.20.1'
//	testImplementation 'org.flywaydb:flyway-core' // 마이그레이션 검증 시
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
